
@book{geoscontributorsGEOSCoordinateTransformation2021,
  title = {{{GEOS}} Coordinate Transformation Software Library},
  author = {{GEOS contributors}},
  year = {2021},
  publisher = {{Open Source Geospatial Foundation}}
}

@article{ketzlerDigitalTwinsCities2020,
  title = {Digital {{Twins}} for {{Cities}}: {{A State}} of the {{Art Review}}},
  author = {Ketzler, Bernd and Naserentin, Vasilis and Latino, Fabio and Zangelidis, Christopher and Thuvander, Liane and Logg, Anders},
  year = {2020},
  journal = {Built Environment},
  volume = {46},
  number = {4},
  pages = {547--573},
  issn = {0263-7960},
  doi = {10.2148/benv.46.4.547},
  abstract = {During the last decades, a variety of digital tools have been developed to support both the planning and management of cities, as well as the inclusion of civic society. Here, the concept of a Digital Twin \textendash{} which is rapidly emerging throughout many disciplines due to advances in technology, computational capacities and availability of large amounts of data \textendash{} plays an important role. In short, a digital twin is a living virtual model, a connected digital representation of a physical system and has been a central concept in the manufacturing industry for the past decades. In this article, we review the terminology of digital twins for cities and identify commonalities and relations to the more established term 3D city models. Our fi ndings indicate an increasing use of the term digital twin in academic literature, both in general and in the context of cities and the built environment. We fi nd that while there is as yet no consensus on the exact defi nition of what constitutes a digital twin, it is increasingly being used to describe something that is more than a 3D city model (including, e.g. semantic data, real-time sensor data, physical models, and simulations). At the same time, the term has not yet replaced the term 3D city model as the most dominant term in the 3D GIS domain. By looking at grey literature we discuss how digital twins for cities are implemented in practice and present examples of digital twins in a global perspective. Further, we discuss some of the application areas and potential challenges for future development and implementation of digital twins for cities. We conclude that there are signifi cant opportunities for up-scaling digital twins, with the potential to bring benefi ts to the city and its citizens and clients.}
}

@article{ledoux3dfierAutomaticReconstruction2021,
  title = {3dfier: Automatic Reconstruction of {{3D}} City Models},
  author = {Ledoux, Hugo and Biljecki, Filip and Dukai, Bal{\'a}zs and Kumar, Kavisha and Peters, Ravi and Stoter, Jantien and Commandeur, Tom},
  year = {2021},
  month = jan,
  journal = {Journal of Open Source Software},
  volume = {6},
  number = {57},
  pages = {2866},
  publisher = {{The Open Journal}},
  issn = {2475-9066},
  doi = {10.21105/joss.02866}
}

@article{ledouxCityJSONCompactEasytouse2019,
  title = {{{CityJSON}}: A Compact and Easy-to-Use Encoding of the {{CityGML}} Data Model},
  author = {Ledoux, Hugo and Arroyo Ohori, Ken and Kumar, Kavisha and Dukai, Bal{\'a}zs and Labetski, Anna and Vitalis, Stelios},
  year = {2019},
  journal = {Open Geospatial Data, Software and Standards},
  issn = {2363-7501},
  doi = {10.1186/s40965-019-0064-0},
  abstract = {The international standard CityGML is both a data model and an exchange format to store digital 3D models of cities. While the data model is used by several cities, companies, and governments, in this paper we argue that its XML-based exchange format has several drawbacks. These drawbacks mean that it is difficult for developers to implement parsers for CityGML, and that practitioners have, as a consequence, to convert their data to other formats if they want to exchange them with others. We present CityJSON, a new JSON-based exchange format for the CityGML data model (version 2.0.0). CityJSON was designed with programmers in mind, so that software and APIs supporting it can be quickly built. It was also designed to be compact (a compression factor of around six with real-world datasets), and to be friendly for web and mobile development. We argue that it is considerably easier to use than the CityGML format, both for reading and for creating datasets. We discuss in this paper the main features of CityJSON, briefly present the different software packages to parse/view/edit/create files (including one to automatically convert between the JSON and GML encodings), analyse how real-world datasets compare to those of CityGML, and we also introduce \$\textbackslash backslash\$emph\{Extensions\}, which allow us to extend the core data model in a documented manner.},
  annotation = {\_eprint: 1902.09155}
}

@book{loggAutomatedSolutionDifferential2012,
  title = {Automated Solution of Differential Equations by the Finite Element Method: {{The FEniCS}} Book},
  author = {Logg, Anders and Mardal, Kent-Andre and Wells, Garth},
  year = {2012},
  volume = {84},
  publisher = {{Springer Science \& Business Media}}
}

@article{naserentinDigitalTwinsCity2022,
  title = {Digital Twins for City Simulation: {{Automatic}}, Efficient, and Robust Mesh Generation for Large-Scale City Modeling and Simulation},
  author = {Naserentin, Vasilis and Logg, Anders},
  year = {2022},
  journal = {arXiv:2210.05250},
  eprint = {2210.05250},
  eprinttype = {arxiv},
  archiveprefix = {arXiv}
}

@article{padenAutomaticReconstruction3D2022,
  title = {Towards Automatic Reconstruction of {{3D}} City Models Tailored for Urban Flow Simulations},
  author = {Pa{\dj}en, Ivan and {Garc{\'i}a-S{\'a}nchez}, Clara and Ledoux, Hugo},
  year = {2022},
  journal = {Frontiers in Built Environment},
  volume = {8},
  issn = {2297-3362},
  abstract = {In the computational fluid dynamics simulation workflow, the geometry preparation step is often regarded as a tedious, time-consuming task. Many practitioners consider it one of the main bottlenecks in the simulation process. The more complex the geometry, the longer the necessary work, meaning this issue is amplified for urban flow simulations that cover large areas with complex building geometries. To address the issue of geometry preparation, we propose a workflow for automatically reconstructing simulation-ready 3D city models. The workflow combines 2D geographical datasets (e.g., cadastral data, topographic datasets) and aerial point cloud-based elevation data to reconstruct terrain, buildings, and imprint surface layers like water, low vegetation, and roads. Imprinted surface layers serve as different roughness surfaces for modeling the atmospheric boundary layer. Furthermore, the workflow is capable of automatically defining the influence region and domain size according to best practice guidelines. The resulting geometry aims to be error-free: without gaps, self-intersections, and non-manifold edges. The workflow was implemented into an open-source framework using modern, robust, and state-of-the-art libraries with the intent to be used for further developments. Our approach limits the geometry generation step to the order of hours (including input data retrieval and preparation), producing geometries that can be directly used for computational grid generation without additional preparation. The reconstruction done by the algorithm can last from a few seconds to a few minutes, depending on the size of the input data. We obtained and prepared the input data for our verification study in about 2~hours, while the reconstruction process lasted 1~minute. The unstructured computational meshes we created in an automatic mesh generator show satisfactory quality indicators and the subsequent numerical simulation exhibits good convergence behavior with the grid convergence index of observed variables less than 5\%.},
  file = {/Users/logg/Zotero/storage/YN5ST9RG/PaÄ‘en m. fl. - 2022 - Towards automatic reconstruction of 3D city models.pdf}
}

@inproceedings{shewchukTriangleEngineering2D1996,
  title = {Triangle: {{Engineering}} a {{2D}} Quality Mesh Generator and {{Delaunay}} Triangulator},
  booktitle = {Workshop on {{Applied Computational Geometry}}},
  author = {Shewchuk, Jonathan Richard},
  year = {1996},
  pages = {203--222},
  publisher = {{Springer}}
}


